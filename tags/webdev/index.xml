<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>webdev on teukka.tech</title><link>https://teukka.tech/tags/webdev/</link><description>Recent content in webdev on teukka.tech</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>taylor@teukka.tech (taylor thompson)</managingEditor><webMaster>taylor@teukka.tech (taylor thompson)</webMaster><lastBuildDate>Sat, 13 Mar 2021 12:23:44 +0000</lastBuildDate><atom:link href="https://teukka.tech/tags/webdev/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://teukka.tech/updates/44624/</link><pubDate>Sat, 13 Mar 2021 12:23:44 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/updates/44624/</guid><description>I&amp;rsquo;ve enjoyed using Hugo to build out my personal website. It makes it so easy to just focus on the fun stuff without worrying about all the tooling you need to generate really great static sites. It&amp;rsquo;s also super fast!</description></item><item><title>Build Your Own Frontend Framework Part 1</title><link>https://teukka.tech/posts/2019-09-15-byoff-part-1/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/posts/2019-09-15-byoff-part-1/</guid><description>Part One, Basic Component Components will be the basic building blocks of our frontend framework. Components will allow modular composition and encapsulation. The first component implementation will be rather naive, but that&amp;rsquo;s alright since its implementation will evolve over time. Let&amp;rsquo;s start with creating a Component class:
const COOL_COMPONENT = Symbol(&amp;#34;component&amp;#34;); class Component { constructor(element, args = {}) { this.$$typeof = COOL_COMPONENT; this.el = document.createElement(element); this.args = args; } } Breaking this down:</description></item></channel></rss>