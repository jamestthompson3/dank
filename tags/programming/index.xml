<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>programming on teukka.tech</title><link>https://teukka.tech/tags/programming/</link><description>Recent content in programming on teukka.tech</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>taylor@teukka.tech (taylor thompson)</managingEditor><webMaster>taylor@teukka.tech (taylor thompson)</webMaster><lastBuildDate>Sat, 27 Mar 2021 15:20:16 +0000</lastBuildDate><atom:link href="https://teukka.tech/tags/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>The Problem with Threads</title><link>https://teukka.tech/bookmarks/the-problem-with-threads/</link><pubDate>Sat, 27 Mar 2021 15:20:16 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/bookmarks/the-problem-with-threads/</guid><description>Threads are a seemingly straightforward adaptation of the dominant sequential model of computation to concurrent systems. Languages require little or no syntactic changes to sup-port threads, and operating systems and architectures have evolved to efficiently support them.Many technologists are pushing for increased use of multithreading in software in order to take advantage of the predicted increases in parallelism in computer architectures. In this paper, I argue that this is not a good idea.</description></item><item><title/><link>https://teukka.tech/updates/54883/</link><pubDate>Sat, 27 Mar 2021 15:14:43 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/updates/54883/</guid><description>&amp;ldquo;humans are quickly overwhelmed by concurrency and find it much more difficult to reason about concurrent than sequential code. Even careful people miss possible inter-leavings among even simple collections of partially ordered operations.&amp;rdquo;
H. Sutter and J. Larus. Software and the concurrency revolution. The fact that source code starts its life as text is part of what makes wrapping my head around concurrent programs difficult. Closure syntax like that in Rust&amp;rsquo;s std::thread::spawn certainly help, but it still gets very tricky to keep things straight.</description></item><item><title>How JavaScript works: inside the V8 engine + 5 tips on how to write optimized code</title><link>https://teukka.tech/bookmarks/91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/bookmarks/91/</guid><description>Couple of weeks ago we started a series aimed at digging deeper into JavaScript and how it actually works: we thought that by knowing theâ€¦</description></item><item><title>Index 1,600,000,000 Keys with Automata and Rust - Andrew Gallant's Blog</title><link>https://teukka.tech/bookmarks/125/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/bookmarks/125/</guid><description>I blog mostly about my own programming projects.</description></item></channel></rss>