<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Learning on teukka.tech</title><link>https://teukka.tech/tags/learning/</link><description>Recent content in Learning on teukka.tech</description><generator>Hugo</generator><language>en-us</language><managingEditor>taylor@teukka.tech (taylor thompson)</managingEditor><webMaster>taylor@teukka.tech (taylor thompson)</webMaster><lastBuildDate>Sun, 15 Sep 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://teukka.tech/tags/learning/index.xml" rel="self" type="application/rss+xml"/><item><title>Build Your Own Frontend Framework Part 1</title><link>https://teukka.tech/posts/2019-09-15-byoff-part-1/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/posts/2019-09-15-byoff-part-1/</guid><description>Part One, Basic Component Components will be the basic building blocks of our frontend framework. Components will allow modular composition and encapsulation. The first component implementation will be rather naive, but that&amp;rsquo;s alright since its implementation will evolve over time. Let&amp;rsquo;s start with creating a Component class:
const COOL_COMPONENT = Symbol(&amp;#34;component&amp;#34;); class Component { constructor(element, args = {}) { this.$$typeof = COOL_COMPONENT; this.el = document.createElement(element); this.args = args; } } Breaking this down:</description></item><item><title>Build Your Own Frontend Framework, Introduction</title><link>https://teukka.tech/posts/2019-09-09-build-your-own-frontend-framework/</link><pubDate>Mon, 09 Sep 2019 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/posts/2019-09-09-build-your-own-frontend-framework/</guid><description>Welcome to build your own frontend framework project! I will be coding this live on my twitch stream. Blog posts will come after the streams.
Goals Become more familiar with some of the concepts that power modern frontend frameworks. Gain a deeper understanding of some of the challenges that arise in creating a JavaScript framework. Get better at writing JavaScript. See how different frameworks solve common problems. Non Goals Build a production ready, competitive framework.</description></item></channel></rss>