<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>es6 on Taylor Thompson's Blog</title><link>https://teukka.tech/tags/es6/</link><description>Recent content in es6 on Taylor Thompson's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>taylor@teukka.tech (taylor thompson)</managingEditor><webMaster>taylor@teukka.tech (taylor thompson)</webMaster><lastBuildDate>Sat, 01 Feb 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://teukka.tech/tags/es6/index.xml" rel="self" type="application/rss+xml"/><item><title>A Brief Look at Javascript Proxies</title><link>https://teukka.tech/posts/2020-02-01-proxies/</link><pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/posts/2020-02-01-proxies/</guid><description>Proxies Javascript Proxies are a powerful concept in ES6. They give developers more control over JS objects, paving the way for declarative API design. I am going to show some examples of how use proxies to extend the functionality of traditional Javascript objects and why they are useful in understanding the flow of data inside your programs.
Microservice Client The first example comes from a request management client that uses a JSON schema to validate incoming requests and route them to other services.</description></item></channel></rss>