<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>teukka.tech</title><link>https://teukka.tech/</link><description>Recent content on teukka.tech</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>taylor@teukka.tech (taylor thompson)</managingEditor><webMaster>taylor@teukka.tech (taylor thompson)</webMaster><lastBuildDate>Tue, 16 Mar 2021 13:52:37 +0000</lastBuildDate><atom:link href="https://teukka.tech/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://teukka.tech/updates/49957/</link><pubDate>Tue, 16 Mar 2021 13:52:37 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/updates/49957/</guid><description>Making the switch from alacritty to kitty and it&amp;rsquo;s really great to have the multiplexer built into the terminal!</description></item><item><title>(Nvim) Lua for Javascripters: Spawning Processes</title><link>https://teukka.tech/posts/js-to-lua/</link><pubDate>Tue, 16 Mar 2021 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/posts/js-to-lua/</guid><description>Goals This should be a quick reference guide for those familiar with NodeJS on how to execute the same async tasks in Lua using luv. This is aimed towards use cases inside Neovim, but is not limited to those cases.
Task We want to spawn a child task to convert a markdown document into HTML using pandoc. This could be used as part of a publishing flow for a blog, for writing notes, or for implementing a markdown previewer.</description></item><item><title/><link>https://teukka.tech/updates/53876/</link><pubDate>Mon, 15 Mar 2021 14:57:56 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/updates/53876/</guid><description>Day 3 of 30 fitness challenge ✅</description></item><item><title/><link>https://teukka.tech/updates/37805/</link><pubDate>Mon, 15 Mar 2021 10:30:05 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/updates/37805/</guid><description>Wondering if there are any guides out there for using lua for build scripting. Seems like it would be faster than spinning up a nodevm, easier to read and reason about that monster bash scripts, and less maintenance than a project written in something like Go or Rust.</description></item><item><title/><link>https://teukka.tech/updates/54987/</link><pubDate>Sun, 14 Mar 2021 15:16:27 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/updates/54987/</guid><description>Been reading Catherine Liu‘s excellent book, Virtue Hoarders and it captures a lot of my own sentiment about politics and culture in a fast paced and exciting style.</description></item><item><title/><link>https://teukka.tech/updates/67516/</link><pubDate>Sat, 13 Mar 2021 18:45:16 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/updates/67516/</guid><description>Thinking about the best way to integrate my existing tiddlywiki into my current website&amp;hellip; Converting everything is a ton of work :(</description></item><item><title/><link>https://teukka.tech/updates/56784/</link><pubDate>Sat, 13 Mar 2021 15:46:24 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/updates/56784/</guid><description>I wonder what a bookclub over micropub/sub might look like, or how xanadu like inclusions could be implemented on the indieweb.</description></item><item><title/><link>https://teukka.tech/updates/44624/</link><pubDate>Sat, 13 Mar 2021 12:23:44 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/updates/44624/</guid><description>I&amp;rsquo;ve enjoyed using Hugo to build out my personal website. It makes it so easy to just focus on the fun stuff without worrying about all the tooling you need to generate really great static sites. It&amp;rsquo;s also super fast!</description></item><item><title/><link>https://teukka.tech/updates/85083/</link><pubDate>Fri, 12 Mar 2021 23:38:03 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/updates/85083/</guid><description>Really amazing feeling when you finally get everything working and can close all your tabs! Getting closer to a great indieweb home on the internet.</description></item><item><title/><link>https://teukka.tech/updates/73747/</link><pubDate>Fri, 12 Mar 2021 20:29:07 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/updates/73747/</guid><description>Testing my new &amp;ldquo;serverless&amp;rdquo; micropub server integration!</description></item><item><title/><link>https://teukka.tech/updates/72696/</link><pubDate>Fri, 12 Mar 2021 20:11:36 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/updates/72696/</guid><description>quick update to test vercel integration again</description></item><item><title>Looking back at ViiksetJS</title><link>https://teukka.tech/posts/viiksetretro/</link><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/posts/viiksetretro/</guid><description>See the demo site and write up here</description></item><item><title>Peer Discovery over UDP</title><link>https://teukka.tech/posts/2020-07-12-peerdiscover/</link><pubDate>Sun, 12 Jul 2020 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/posts/2020-07-12-peerdiscover/</guid><description>What is Peer discovery Peer discovery allows you to discover other computers on the same subnet, intranet, or through the internet. Discovering peers directly removes the necessity of a centralized server architecture, reducing the number of network jumps your packets require to share information with each other. Peer discovery can be used in: discovering microservices in the same docker network or kubernetes cluster, file sharing (like airdrop and bittorrent), and peer to peer gaming.</description></item><item><title>Javascript Quick Tip -- Browser Notifications</title><link>https://teukka.tech/posts/2020-05-16-notifications/</link><pubDate>Sat, 16 May 2020 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/posts/2020-05-16-notifications/</guid><description>Let &amp;lsquo;Em Know While notifications are one of the browser features that are often abused and lead to obnoxious spam, there are still use cases where notifications enhance the experience of your web application. Modern browsers (with the exception of iOS Safari), support two types of notifications: push, and web. This post discusses only web notifications, since they do not require registration on a server, or the use of a service worker (although they can be used with both).</description></item><item><title>Build a Better Web with Service Workers</title><link>https://teukka.tech/posts/2020-03-07-serviceworker/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/posts/2020-03-07-serviceworker/</guid><description>Working Hard, or Hardly Working? The Service Worker API is a powerful tool for providing better offline experiences, push notifications, and background syncing for web applications. Like me, you may be familiar with service workers from the role they play in creating Progressive Web Apps (PWAs), or from seeing them registered as part of the build output of create-react-app. While this automatic output from build tools such as create-react-app is very useful in getting started with PWAs, using the Service Worker API is much more beneficial to your application when tailored to your use cases.</description></item><item><title>A Brief Look at Javascript Proxies</title><link>https://teukka.tech/posts/2020-02-01-proxies/</link><pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/posts/2020-02-01-proxies/</guid><description>Proxies Javascript Proxies are a powerful concept in ES6. They give developers more control over JS objects, paving the way for declarative API design. I am going to show some examples of how use proxies to extend the functionality of traditional Javascript objects and why they are useful in understanding the flow of data inside your programs.
Microservice Client The first example comes from a request management client that uses a JSON schema to validate incoming requests and route them to other services.</description></item><item><title>Neovim Tip, GitLens</title><link>https://teukka.tech/posts/2020-01-28-vimtip-gitlens/</link><pubDate>Tue, 28 Jan 2020 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/posts/2020-01-28-vimtip-gitlens/</guid><description>Intro GitLens is a VSCode plugin that, among other things, allows you to see the time, commit author, and commit message of the current line. With a little help from to the neovim api and our shell, it we can recreate this functionality in a few lines of lua code.
The Code -- in utils.lua local M = {} local api = vim.api function M.blameVirtText() local ft = vim.fn.expand(&amp;#39;%:h:t&amp;#39;) -- get the current file extension if ft == &amp;#39;&amp;#39; then -- if we are in a scratch buffer or unknown filetype return end if ft == &amp;#39;bin&amp;#39; then -- if we are in nvim&amp;#39;s terminal window return end api.</description></item><item><title>Using LibUV in Neovim</title><link>https://teukka.tech/posts/2020-01-07-vimloop/</link><pubDate>Tue, 07 Jan 2020 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/posts/2020-01-07-vimloop/</guid><description>Off The Main Loop: Async Actions within Neovim Neovim embeds the libuv library in the editor and exposes lua (and to some extent vimscript through the jobstart function) bindings for interacting with the library&amp;rsquo;s API. This allows actions in the editor to happen asynchronously, keeping the main editor loop clear for user input. What this means practically for users is that actions which take a long time such as grepping through large projects, generating ctags, or linting can now be done in the background without blocking the user&amp;rsquo;s ability to keep editing text.</description></item><item><title>From init.vim to init.lua</title><link>https://teukka.tech/posts/2019-12-19-luanvim/</link><pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/posts/2019-12-19-luanvim/</guid><description>Why Lua? Neovim has an embedded lua 5.1 runtime which is used to create faster and more powerful extensions of your favorite editor. In the Neovim charter, it lists one of its goals as developing a first-class lua scripting alternative to VimL. One of the reasons for doing this is that VimL is a slow interpreted language with almost no optimizations. Much of the time spent in vim startup and in actions from plugins that can block the main loop in the editor is in parsing and executing vimscript.</description></item><item><title>Build Your Own Frontend Framework Part 2, Data Fetching</title><link>https://teukka.tech/posts/2019-10-01-byoff-part-2/</link><pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/posts/2019-10-01-byoff-part-2/</guid><description>Part Two, Data Fetching on Mount Asynchronous actions are essential in any modern web application. The ability to fetch data from some service and display it to users is an important part of building a framework to support these applications. In order for our components to do this, we need to refactor. Our component calls mount when we want to render it on the page, but this function only serves to attach styles and event handlers to the component, not fetch data asynchronously.</description></item><item><title>Build Your Own Frontend Framework Part 1</title><link>https://teukka.tech/posts/2019-09-15-byoff-part-1/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/posts/2019-09-15-byoff-part-1/</guid><description>Part One, Basic Component Components will be the basic building blocks of our frontend framework. Components will allow modular composition and encapsulation. The first component implementation will be rather naive, but that&amp;rsquo;s alright since its implementation will evolve over time. Let&amp;rsquo;s start with creating a Component class:
const COOL_COMPONENT = Symbol(&amp;#34;component&amp;#34;); class Component { constructor(element, args = {}) { this.$$typeof = COOL_COMPONENT; this.el = document.createElement(element); this.args = args; } } Breaking this down:</description></item><item><title>Build Your Own Frontend Framework, Introduction</title><link>https://teukka.tech/posts/2019-09-09-build-your-own-frontend-framework/</link><pubDate>Mon, 09 Sep 2019 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/posts/2019-09-09-build-your-own-frontend-framework/</guid><description>Welcome to build your own frontend framework project! I will be coding this live on my twitch stream. Blog posts will come after the streams.
Goals Become more familiar with some of the concepts that power modern frontend frameworks. Gain a deeper understanding of some of the challenges that arise in creating a JavaScript framework. Get better at writing JavaScript. See how different frameworks solve common problems. Non Goals Build a production ready, competitive framework.</description></item><item><title>Vim does that already</title><link>https://teukka.tech/posts/2019-08-25-vimcandothat/</link><pubDate>Sun, 25 Aug 2019 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/posts/2019-08-25-vimcandothat/</guid><description>Power to Productivity Vim is a powerful tool which helps you stay productive and spend less time doing the mechanical work of coding. For many, Vim seems archaic, under-featured, or even intimidating. I hope to illustrate that Vim none of those things, but is in fact a great editor for nearly every development environment.
I want to focus on three common tasks where Vim helps you be more productive without leaving your editor.</description></item><item><title>A schoolman's guide to Marshall McLuhan</title><link>https://teukka.tech/bookmarks/206/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/bookmarks/206/</guid><description/></item><item><title>An introduction to Data Oriented Design with Rust - Statistically Insignificant</title><link>https://teukka.tech/bookmarks/110/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/bookmarks/110/</guid><description>An introduction to Data Oriented Design with Rust An introduction to Data Oriented Design with Rust In the post we will investigate the main …</description></item><item><title>De Morgan's Laws</title><link>https://teukka.tech/bookmarks/94/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/bookmarks/94/</guid><description>De Morgan&amp;rsquo;s laws are a pair of boolean algebra rules, if written in javascript-style boolean expressions, they look like this:</description></item><item><title>How JavaScript works: inside the V8 engine + 5 tips on how to write optimized code</title><link>https://teukka.tech/bookmarks/91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/bookmarks/91/</guid><description>Couple of weeks ago we started a series aimed at digging deeper into JavaScript and how it actually works: we thought that by knowing the…</description></item><item><title>Index 1,600,000,000 Keys with Automata and Rust - Andrew Gallant's Blog</title><link>https://teukka.tech/bookmarks/125/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/bookmarks/125/</guid><description>I blog mostly about my own programming projects.</description></item><item><title>Introduction - Rust Design Patterns</title><link>https://teukka.tech/bookmarks/106/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/bookmarks/106/</guid><description>A catalogue of Rust design patterns, anti-patterns and idioms</description></item><item><title>Knowledge Base</title><link>https://teukka.tech/knowledgebase/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/knowledgebase/</guid><description>Welcome to the knowledge base. My notes are hosted here.
Reading Title Author Rating Read On Virtue Hoarders: The Case against the Professional Managerial Class Catherine Lius 5 2021/03/15 Sing to It: New Stories Amy Hempel 3 2021/02/21 Amusing Ourselves to Death: Public Discourse in the Age of Show Business Neil Postman 3 2021/01/31 Rythm of War Brandon Sanderson 5 2021/01/25 Oathbringer Brandon Sanderson 5 2021/01/17 The Monk of Mokha Dave Eggers 5 2020/12/28 Words of Radiance Brandon Sanderson 5 2020/12/27 The Way of Kings Brandon Sanderson 5 2020/12/23 Mind Management, Not Time Management: Productivity When Creativity Matters (Getting Art Done Book 2) David Kadavy 4 2020/11/22 The Metaphysical Elements of Ethics Immanuel Kant 3 2020/10/19 The Making of a Manger: What to Do When Everyone Looks To You Julie Zhou 4 2020/10/14 The Hard Thing About Hard Things Ben Horowitz 4 2020/08/26 The Cuckoo&amp;rsquo;s Egg Clifford Stoll 4 2020/08/13 King Leopold&amp;rsquo;s Ghost Adam Hochshild 4 2020/08/04 The Culture Code: The Secrets of Highly Successful Groups Daniel Coyle 5 2020/08/03 The Art of Doing Science and Engineering: Learning to Learn Richard Hamming 4 2020/07/26 The End of Policing Alex Vitale 4 2020/07/09 How to Take Smart Notes Sonke Ahrens 5 2020/07/06 Lies My Teacher Told Me: Everything your American History Textbook Got Wrong James W.</description></item><item><title>On Weaponised Design ~ Shiba Computer</title><link>https://teukka.tech/bookmarks/216/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/bookmarks/216/</guid><description>The lived experiences of digital platform users is at odds with how these systems are designed. Weaponised design – a process that allows for harm of users within the defined bounds of a designed system – is faciliated by designers who are oblivious to the politics of digital infrastructure or consider their design practice output to be apolitical. Despite traumatic events against users with increasing regularity, addressing the weaponisation of design is not yet a priority, and is still to be addressed by the design community.</description></item><item><title>THE ENVIRONMENTAL ISSUES WITH CRYPTOART WILL BE SOLVED SOON, RIGHT? | Medium</title><link>https://teukka.tech/bookmarks/205/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/bookmarks/205/</guid><description/></item><item><title>The Unraveling of America</title><link>https://teukka.tech/bookmarks/214/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/bookmarks/214/</guid><description>Anthropologist Wade Davis writes about Covid-19 and its devastating impact on the international standing of the United States.</description></item><item><title>What the Luddites Really Fought Against | History | Smithsonian Magazine</title><link>https://teukka.tech/bookmarks/211/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/bookmarks/211/</guid><description>The label now has many meanings, but when the group protested 200 years ago, technology wasn&amp;rsquo;t really the enemy</description></item><item><title>Why using `_.chain` is a mistake.</title><link>https://teukka.tech/bookmarks/249/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/bookmarks/249/</guid><description>Leveraging functional programming in JavaScript to make builds faster and leaner.</description></item><item><title>Work notebooks: Against Hackerism, pt. 1</title><link>https://teukka.tech/bookmarks/217/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>taylor@teukka.tech (taylor thompson)</author><guid>https://teukka.tech/bookmarks/217/</guid><description>This article is part of a series which will hopefully lead to the creation of an open article about technological dissemination and the n&amp;hellip;</description></item></channel></rss>